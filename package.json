{
  "name": "open-scd-core",
  "version": "0.0.0",
  "license": "Apache-2.0",
  "packageManager": "npm@8.12.2",
  "type": "module",
  "exports": {
    ".": "dist/foundation.js",
    "/open-scd.js": "dist/open-scd.js"
  },
  "scripts": {
    "start": "npm run build && concurrently -k -r \"tsc -b --watch --preserveWatchOutput\" \"wds\"",
    "test": "playwright install && wtr --coverage",
    "test:watch": "npm run build && concurrently -k -r \"tsc -b --watch --preserveWatchOutput\" \"wtr --watch --coverage\"",
    "test:update": "npm run build && wtr --update-visual-baseline",
    "analyze": "cem analyze --litelement",
    "build": "npm run extract && npm run localize && npm run compile",
    "compile": "tsc -b && tsc foundation.ts --declaration --emitDeclarationOnly --outDir dist",
    "doc": "npm run analyze -- --exclude dist && typedoc --out dist/doc foundation.ts",
    "prepublish": "npm run lint && npm run build && npm run doc",
    "lint": "eslint --ext .ts,.html . --ignore-path .gitignore && prettier \"**/*.ts\" --check --ignore-path .gitignore",
    "format": "eslint --ext .ts,.html . --fix --ignore-path .gitignore && prettier \"**/*.ts\" --write --ignore-path .gitignore",
    "extract": "lit-localize extract",
    "localize": "lit-localize build"
  },
  "dependencies": {
    "@lit/localize": "^0.11.4",
    "@material/mwc-button": "^0.27.0",
    "@material/mwc-dialog": "^0.27.0",
    "@material/mwc-drawer": "^0.27.0",
    "@material/mwc-icon": "^0.27.0",
    "@material/mwc-icon-button": "^0.27.0",
    "@material/mwc-list": "^0.27.0",
    "@material/mwc-tab-bar": "^0.27.0",
    "@material/mwc-top-app-bar-fixed": "^0.27.0",
    "lit": "^2.2.7"
  },
  "devDependencies": {
    "@custom-elements-manifest/analyzer": "^0.6.3",
    "@lit/localize-tools": "^0.6.5",
    "@open-wc/eslint-config": "^7.0.0",
    "@open-wc/testing": "next",
    "@typescript-eslint/eslint-plugin": "^5.30.7",
    "@typescript-eslint/parser": "^5.30.7",
    "@web/dev-server": "^0.1.32",
    "@web/test-runner": "next",
    "@web/test-runner-playwright": "^0.8.10",
    "@web/test-runner-visual-regression": "^0.6.6",
    "concurrently": "^7.3.0",
    "eslint": "^8.20.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-tsdoc": "^0.2.16",
    "fast-check": "^3.1.1",
    "husky": "^4.3.8",
    "lint-staged": "^13.0.3",
    "prettier": "^2.7.1",
    "tsdoc": "^0.0.4",
    "tslib": "^2.4.0",
    "typedoc": "^0.23.8",
    "typescript": "^4.7.4"
  },
  "customElements": "custom-elements.json",
  "eslintConfig": {
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
      "lib": [
        "es2018",
        "dom"
      ]
    },
    "extends": [
      "@open-wc",
      "prettier"
    ],
    "plugins": [
      "@typescript-eslint",
      "eslint-plugin-tsdoc"
    ],
    "rules": {
      "no-unused-vars": "off",
      "sort-imports": [
        "error",
        {
          "ignoreCase": true,
          "allowSeparatedGroups": true
        }
      ],
      "class-methods-use-this": [
        "error",
        {
          "exceptMethods": [
            "locale"
          ]
        }
      ],
      "@typescript-eslint/no-explicit-any": [
        "error",
        {
          "ignoreRestArgs": true
        }
      ],
      "import/no-extraneous-dependencies": [
        "error",
        {
          "devDependencies": [
            "**/*.test.ts",
            "**/*.spec.ts"
          ]
        }
      ],
      "@typescript-eslint/no-unused-vars": [
        "error",
        {
          "argsIgnorePattern": "^_",
          "varsIgnorePattern": "^_",
          "destructuredArrayIgnorePattern": "^_"
        }
      ],
      "import/no-unresolved": "off",
      "import/extensions": [
        "error",
        "always",
        {
          "ignorePackages": true
        }
      ]
    },
    "overrides": [
      {
        "files": [
          "**/*.spec.ts"
        ],
        "rules": {
          "no-unused-expressions": "off"
        }
      }
    ]
  },
  "prettier": {
    "singleQuote": true,
    "arrowParens": "avoid"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "lint-staged": {
    "*.ts": [
      "eslint --fix",
      "prettier --write"
    ]
  }
}
